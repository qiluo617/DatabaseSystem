--query 1
CREATE INDEX ON batting(h);

EXPLAIN ANALYZE SELECT min(H)
FROM batting;


--query 2 
CREATE INDEX ON batting(yearid,h); -- does not work on postgres. But works on MySQL
-- if we use Postgres
-- need to turn off seq scan, if we want to use index to optimize. 
SET enable_seqscan = off;

EXPLAIN ANALYZE SELECT yearID,min(H)
FROM batting
WHERE H is not null
GROUP BY yearID;


--query 3  join
EXPLAIN ANALYZE SELECT master.*
FROM master 
JOIN batting 
USING (masterID);

CREATE INDEX ON batting(masterid);
EXPLAIN ANALYZE SELECT master.*
FROM master,batting
WHERE master.masterid = batting.masterid;


-- query 4 
EXPLAIN ANALYZE SELECT *
FROM master m
WHERE EXISTS 
  (SELECT *
   FROM pitching
   WHERE m.masterID = pitching.masterID);

EXPLAIN ANALYZE SELECT *
FROM master m
WHERE EXISTS 
  (SELECT *
   FROM pitching, master as ma
   WHERE ma.masterID = pitching.masterID);
   
   
-- query 5
CREATE INDEX ON master(birthState,birthCountry);

EXPLAIN ANALYZE SELECT DISTINCT birthState, birthCountry
FROM master;


--query 6
CREATE INDEX ON master(birthState,birthCountry);

EXPLAIN ANALYZE SELECT birthState, birthCountry
FROM master;


--query 7
EXPLAIN ANALYZE SELECT h
FROM batting
UNION 
SELECT g
FROM teams;
   
EXPLAIN ANALYZE SELECT DISTINCT *
FROM (SELECT h
FROM batting
UNION ALL
SELECT g
FROM teams) AS unionall;


--query 8
CREATE INDEX ON batting(teamid,yearid,lgid);
CREATE INDEX ON teams(lgid);

EXPLAIN ANALYZE SELECT DISTINCT master.nameFirst as "First Name", master.nameLast as "Last Name"
FROM
    (SELECT b.masterID AS ID, b.yearID AS year
     FROM batting b, teams t
     WHERE name LIKE '%Montreal Expos%'
       AND b.teamID = t.teamID
       AND b.yearID = t.yearID
       AND t.lgID = b.lgID) y1,
    (SELECT b.masterID AS ID, b.yearID AS year
     FROM batting b, teams t
     WHERE name LIKE '%Montreal Expos%'
       AND b.teamID = t.teamID
       AND b.yearID = t.yearID
       AND t.lgID = b.lgID) y2,
    (SELECT b.masterID AS ID, b.yearID AS year
     FROM batting b, teams t
     WHERE name LIKE '%Montreal Expos%'
       AND b.teamID = t.teamID
       AND b.yearID = t.yearID
       AND t.lgID = b.lgID) y3,
    master
WHERE y1.id = y2.id 
  AND y2.id = y3.id
  AND y1.year + 1 = y2.year
  AND y2.year + 1 = y3.year
  AND y3.id = master.masterID
ORDER BY master.nameLast, master.nameFirst;
   
 --another way
create index on batting(teamid, yearid, lgid);
explain analyze with bt as(
SELECT b.masterID AS ID, b.yearID AS year
     FROM batting b, teams t
     WHERE name LIKE '%Montreal Expos%'
       AND b.teamID = t.teamID
       AND b.yearID = t.yearID
       AND t.lgID = b.lgID)
SELECT DISTINCT master.nameFirst as "First Name", master.nameLast as "Last Name"
FROM bt y1, bt y2, bt y3, master
WHERE y1.id = y2.id 
  AND y2.id = y3.id
  AND y1.year + 1 = y2.year
  AND y2.year + 1 = y3.year
  AND y3.id = master.masterID
ORDER BY master.nameLast, master.nameFirst;
--query 9
CREATE INDEX ON appearances(masterID, teamID,lgID, G_1b, G_2b, G_3b);
CREATE INDEX ON master(nameLast, nameFirst);

EXPLAIN ANALYZE SELECT DISTINCT jeter.masterID, jeterT.masterID, jeterTY.masterID, jeterTT.masterID
FROM master m,
    appearances jeter,
    appearances jeterT,
    appearances jeterTY,
    appearances jeterTT
WHERE m.masterID = jeter.masterID
  AND m.nameLast = 'Jeter'
  AND m.nameFirst = 'Derek'
  AND jeter.teamID = jeterT.teamID
  AND jeter.yearID = jeterT.yearID
  AND jeter.lgID = jeterT.lgID
  AND jeter.masterID <> jeterT.masterID
  AND jeterT.masterID = jeterTY.masterID
  AND jeterTY.teamID = jeterTT.teamID
  AND jeterTY.yearID = jeterTT.yearID
  AND jeterTY.lgID = jeterTT.lgID
  AND jeterTY.masterID <> jeterTT.masterID
  AND jeterTT.masterID <> jeter.masterID
  AND jeter.teamID <> jeterTY.teamID
  AND jeterT.G_1b > 10
  AND jeterTY.G_2b > 10
  AND jeterTT.G_3b > 10;
  
  
--query 10 
CREATE INDEX ON teams(yearid,w,name);

EXPLAIN ANALYZE SELECT name, yearId, W
FROM teams T
WHERE W = (SELECT MAX(W)
           FROM teams y
           WHERE t.yearID = y.yearID
          );